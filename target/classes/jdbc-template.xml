<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.shh.jdbcTemplate"/>

    <!--加载属性文件-->
    <context:property-placeholder location="classpath:jdbc.properties" ignore-resource-not-found="true"/>

    <!--配置JdbcTemplate-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--配置数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${database.driver}"/>
        <property name="jdbcUrl" value="${database.url}"/>
        <property name="user" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
    </bean>

    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--Spring中基于xml的声明式事务配置开始-->
    <!--配置事务拦截器-->
    <bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transactionManager"/>
        <!--配置事务属性-->
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED</prop>
                <prop key="get*">PROPAGATION_SUPPORTS,readOnly</prop>
                <prop key="query*">PROPAGATION_SUPPORTS,readOnly</prop>
                <prop key="find*">PROPAGATION_SUPPORTS,readOnly</prop>
                <prop key="select*">PROPAGATION_SUPPORTS,readOnly</prop>
            </props>
        </property>
    </bean>
    <!--指定事务拦截器要拦截哪些类-->
    <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames">
            <list>
                <!--对象在IoC容器中的名称，*是通配符-->
                <value>*Service</value>
            </list>
        </property>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>
    <!--Spring中基于xml的声明式事务配置结束-->

<!--    &lt;!&ndash;Spring中基于xml的声明式事务配置开始&ndash;&gt;-->
<!--    &lt;!&ndash;配置事务的通知&ndash;&gt;-->
<!--    <tx:advice id="txAdvice" transaction-manager="transactionManager">-->
<!--        &lt;!&ndash;配置事务的属性&ndash;&gt;-->
<!--        &lt;!&ndash;isolation：指定事务的隔离级别，默认DEFAULT，使用数据库的默认隔离级别&ndash;&gt;-->
<!--        &lt;!&ndash;propagation：指定事务的传播行为，默认REQUIRED，表示一定会有事务（增删改使用），SUPPORTS（查询可使用）&ndash;&gt;-->
<!--        &lt;!&ndash;read-only：指定是否是只读事务，默认为false，查询方法可设置为true&ndash;&gt;-->
<!--        &lt;!&ndash;timeout：指定事务的超时时间，默认-1，不会超时，单位为秒&ndash;&gt;-->
<!--        &lt;!&ndash;rollback-for：指定一个异常，当发生该异常时回滚事务，有其它异常时不回滚，默认没有值，任何异常都会回滚&ndash;&gt;-->
<!--        &lt;!&ndash;no-rollback-for：指定一个异常，当发生该异常时不回滚事务，有其它异常时回滚事务，默认没有值，任何异常都会回滚&ndash;&gt;-->
<!--        <tx:attributes>-->
<!--            <tx:method name="*"/>-->
<!--            <tx:method name="*get" propagation="SUPPORTS" read-only="true"/>-->
<!--            <tx:method name="*select" propagation="SUPPORTS" read-only="true"/>-->
<!--            <tx:method name="*find" propagation="SUPPORTS" read-only="true"/>-->
<!--            <tx:method name="*query" propagation="SUPPORTS" read-only="true"/>-->
<!--        </tx:attributes>-->
<!--    </tx:advice>-->
<!--    &lt;!&ndash;事务的AOP相关配置&ndash;&gt;-->
<!--    <aop:config>-->
<!--        &lt;!&ndash;定义切入点表达式&ndash;&gt;-->
<!--        <aop:pointcut id="pt" expression="execution(* com.shh.jdbcTemplate.service.impl.*.*(..))"/>-->
<!--        &lt;!&ndash;建立切点表达式和事务的通知的关系&ndash;&gt;-->
<!--        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt"/>-->
<!--    </aop:config>-->
<!--    &lt;!&ndash;Spring中基于xml的声明式事务配置结束&ndash;&gt;-->

<!--    &lt;!&ndash;Spring中基于注解的声明式事务配置开始&ndash;&gt;-->
<!--    &lt;!&ndash;开启Spring对基于注解事务的支持&ndash;&gt;-->
<!--    <tx:annotation-driven transaction-manager="transactionManager"/>-->
<!--    &lt;!&ndash;在需要事务支持的类上添加@Transactional注解&ndash;&gt;-->
<!--    &lt;!&ndash;Spring中基于注解的声明式事务配置结束&ndash;&gt;-->
</beans>